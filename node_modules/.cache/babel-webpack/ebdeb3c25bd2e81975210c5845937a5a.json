{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, Input, ContentChildren, forwardRef, Component, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\n\nconst _c0 = [\"host\"];\n\nclass CKButtonDirective {\n  constructor() {\n    this.click = new EventEmitter();\n  }\n\n  initialize(editor) {\n    editor.instance.addCommand(this.command, {\n      exec: edit => {\n        this.click.emit(edit);\n        return true;\n      }\n    });\n    editor.instance.ui.addButton(this.name, {\n      label: this.label,\n      command: this.command,\n      toolbar: this.toolbar,\n      icon: this.icon\n    });\n  }\n\n  ngOnInit() {\n    if (!this.name) {\n      throw new Error('Attribute \"name\" is required on <ckbutton>');\n    }\n\n    if (!this.command) {\n      throw new Error('Attribute \"command\" is required on <ckbutton>');\n    }\n  }\n\n}\n\nCKButtonDirective.ɵfac = function CKButtonDirective_Factory(t) {\n  return new (t || CKButtonDirective)();\n};\n\nCKButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CKButtonDirective,\n  selectors: [[\"ckbutton\"]],\n  inputs: {\n    label: \"label\",\n    command: \"command\",\n    toolbar: \"toolbar\",\n    name: \"name\",\n    icon: \"icon\"\n  },\n  outputs: {\n    click: \"click\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ckbutton'\n    }]\n  }], null, {\n    click: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    command: [{\n      type: Input\n    }],\n    toolbar: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckgroup [name]=\"'exampleGroup2'\" [previous]=\"'1'\" [subgroupOf]=\"'exampleGroup1'\">\n *          .\n *          .\n *      </ckgroup>\n *   </ckeditor>\n */\n\n\nclass CKGroupDirective {\n  ngAfterContentInit() {\n    // Reconfigure each button's toolbar property within ckgroup to hold its parent's name\n    this.toolbarButtons.forEach(button => button.toolbar = this.name);\n  }\n\n  initialize(editor) {\n    editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf); // Initialize each button within ckgroup\n\n    this.toolbarButtons.forEach(button => {\n      button.initialize(editor);\n    });\n  }\n\n}\n\nCKGroupDirective.ɵfac = function CKGroupDirective_Factory(t) {\n  return new (t || CKGroupDirective)();\n};\n\nCKGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CKGroupDirective,\n  selectors: [[\"ckgroup\"]],\n  contentQueries: function CKGroupDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CKButtonDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarButtons = _t);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    previous: \"previous\",\n    subgroupOf: \"subgroupOf\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ckgroup'\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    previous: [{\n      type: Input\n    }],\n    subgroupOf: [{\n      type: Input\n    }],\n    toolbarButtons: [{\n      type: ContentChildren,\n      args: [CKButtonDirective]\n    }]\n  });\n})(); // Imports\n\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\n\n\nclass CKEditorComponent {\n  /**\n   * Constructor\n   */\n  constructor(zone) {\n    this.zone = zone;\n    this.change = new EventEmitter();\n    this.editorChange = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.contentDom = new EventEmitter();\n    this.fileUploadRequest = new EventEmitter();\n    this.fileUploadResponse = new EventEmitter();\n    this.paste = new EventEmitter();\n    this.drop = new EventEmitter();\n    this._value = '';\n    this.destroyed = false;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.readonly && this.instance) {\n      this.instance.setReadOnly(changes.readonly.currentValue);\n    }\n  }\n  /**\n   * On component destroy\n   */\n\n\n  ngOnDestroy() {\n    this.destroyed = true;\n    this.zone.runOutsideAngular(() => {\n      if (this.instance) {\n        CKEDITOR.removeAllListeners();\n        this.instance.destroy();\n        this.instance = null;\n      }\n    });\n  }\n  /**\n   * On component view init\n   */\n\n\n  ngAfterViewInit() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.ckeditorInit(this.config || {});\n  }\n  /**\n   * On component view checked\n   */\n\n\n  ngAfterViewChecked() {\n    this.ckeditorInit(this.config || {});\n  }\n  /**\n   * Value update process\n   */\n\n\n  updateValue(value) {\n    this.zone.run(() => {\n      this.value = value;\n      this.onChange(value);\n      this.onTouched();\n      this.change.emit(value);\n    });\n  }\n  /**\n   * CKEditor init\n   */\n\n\n  ckeditorInit(config) {\n    if (typeof CKEDITOR === 'undefined') {\n      console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\n    } else {\n      // Check textarea exists\n      if (this.instance || !this.documentContains(this.host.nativeElement)) {\n        return;\n      }\n\n      if (this.readonly) {\n        config.readOnly = this.readonly;\n      } // CKEditor replace textarea\n\n\n      this.instance = CKEDITOR.replace(this.host.nativeElement, config); // Set initial value\n\n      this.instance.setData(this.value); // listen for instanceReady event\n\n      this.instance.on('instanceReady', evt => {\n        // if value has changed while instance loading\n        // update instance with current component value\n        if (this.instance.getData() !== this.value) {\n          this.instance.setData(this.value);\n        } // send the evt to the EventEmitter\n\n\n        this.ready.emit(evt);\n      }); // CKEditor change event\n\n      this.instance.on('change', evt => {\n        this.onTouched();\n        const value = this.instance.getData();\n\n        if (this.value !== value) {\n          // Debounce update\n          if (this.debounce) {\n            if (this.debounceTimeout) {\n              clearTimeout(this.debounceTimeout);\n            }\n\n            this.debounceTimeout = window.setTimeout(() => {\n              this.updateValue(value);\n              this.debounceTimeout = null;\n            }, parseInt(this.debounce)); // Live update\n          } else {\n            this.updateValue(value);\n          }\n        } // Original ckeditor event dispatch\n\n\n        this.editorChange.emit(evt);\n      }); // CKEditor blur event\n\n      this.instance.on('blur', evt => {\n        this.blur.emit(evt);\n      }); // CKEditor focus event\n\n      this.instance.on('focus', evt => {\n        this.focus.emit(evt);\n      }); // CKEditor contentDom event\n\n      this.instance.on('contentDom', evt => {\n        this.contentDom.emit(evt);\n      }); // CKEditor fileUploadRequest event\n\n      this.instance.on('fileUploadRequest', evt => {\n        this.fileUploadRequest.emit(evt);\n      }); // CKEditor fileUploadResponse event\n\n      this.instance.on('fileUploadResponse', evt => {\n        this.fileUploadResponse.emit(evt);\n      }); // CKEditor paste event\n\n      this.instance.on('paste', evt => {\n        this.paste.emit(evt);\n      }); // CKEditor drop event\n\n      this.instance.on('drop', evt => {\n        this.drop.emit(evt);\n      }); // Add Toolbar Groups to Editor. This will also add Buttons within groups.\n\n      this.toolbarGroups.forEach(group => {\n        group.initialize(this);\n      }); // Add Toolbar Buttons to Editor.\n\n      this.toolbarButtons.forEach(button => {\n        button.initialize(this);\n      });\n    }\n  }\n  /**\n   * Implements ControlValueAccessor\n   */\n\n\n  writeValue(value) {\n    this._value = value;\n    if (this.instance) this.instance.setData(value);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  documentContains(node) {\n    return document.contains ? document.contains(node) : document.body.contains(node);\n  }\n\n}\n\nCKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) {\n  return new (t || CKEditorComponent)(i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nCKEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CKEditorComponent,\n  selectors: [[\"ckeditor\"]],\n  contentQueries: function CKEditorComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CKButtonDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, CKGroupDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarButtons = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarGroups = _t);\n    }\n  },\n  viewQuery: function CKEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.host = _t.first);\n    }\n  },\n  inputs: {\n    config: \"config\",\n    readonly: \"readonly\",\n    debounce: \"debounce\",\n    value: \"value\"\n  },\n  outputs: {\n    change: \"change\",\n    editorChange: \"editorChange\",\n    ready: \"ready\",\n    blur: \"blur\",\n    focus: \"focus\",\n    contentDom: \"contentDom\",\n    fileUploadRequest: \"fileUploadRequest\",\n    fileUploadResponse: \"fileUploadResponse\",\n    paste: \"paste\",\n    drop: \"drop\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CKEditorComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"host\", \"\"]],\n  template: function CKEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"textarea\", null, 0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ckeditor',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CKEditorComponent),\n        multi: true\n      }],\n      template: `<textarea #host></textarea>`\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    debounce: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    editorChange: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    contentDom: [{\n      type: Output\n    }],\n    fileUploadRequest: [{\n      type: Output\n    }],\n    fileUploadResponse: [{\n      type: Output\n    }],\n    paste: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }],\n    host: [{\n      type: ViewChild,\n      args: ['host', {\n        static: false\n      }]\n    }],\n    toolbarButtons: [{\n      type: ContentChildren,\n      args: [CKButtonDirective]\n    }],\n    toolbarGroups: [{\n      type: ContentChildren,\n      args: [CKGroupDirective]\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * CKEditorModule\n */\n\n\nclass CKEditorModule {}\n\nCKEditorModule.ɵfac = function CKEditorModule_Factory(t) {\n  return new (t || CKEditorModule)();\n};\n\nCKEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CKEditorModule,\n  declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n  imports: [CommonModule],\n  exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective]\n});\nCKEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n      exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CKButtonDirective, CKEditorComponent, CKEditorModule, CKGroupDirective }; //# sourceMappingURL=ng2-ckeditor.mjs.map","map":{"version":3,"sources":["/Users/thomaskertsalis/AllIonicProjects/MyBlog/node_modules/ng2-ckeditor/fesm2020/ng2-ckeditor.mjs"],"names":["i0","EventEmitter","Directive","Output","Input","ContentChildren","forwardRef","Component","ViewChild","NgModule","NG_VALUE_ACCESSOR","CommonModule","CKButtonDirective","constructor","click","initialize","editor","instance","addCommand","command","exec","edit","emit","ui","addButton","name","label","toolbar","icon","ngOnInit","Error","ɵfac","ɵdir","type","args","selector","CKGroupDirective","ngAfterContentInit","toolbarButtons","forEach","button","addToolbarGroup","previous","subgroupOf","CKEditorComponent","zone","change","editorChange","ready","blur","focus","contentDom","fileUploadRequest","fileUploadResponse","paste","drop","_value","destroyed","value","v","onChange","ngOnChanges","changes","readonly","setReadOnly","currentValue","ngOnDestroy","runOutsideAngular","CKEDITOR","removeAllListeners","destroy","ngAfterViewInit","ckeditorInit","config","ngAfterViewChecked","updateValue","run","onTouched","console","warn","documentContains","host","nativeElement","readOnly","replace","setData","on","evt","getData","debounce","debounceTimeout","clearTimeout","window","setTimeout","parseInt","toolbarGroups","group","writeValue","registerOnChange","fn","registerOnTouched","node","document","contains","body","NgZone","ɵcmp","provide","useExisting","multi","providers","template","static","CKEditorModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, Input, ContentChildren, forwardRef, Component, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\nclass CKButtonDirective {\n    constructor() {\n        this.click = new EventEmitter();\n    }\n    initialize(editor) {\n        editor.instance.addCommand(this.command, {\n            exec: (edit) => {\n                this.click.emit(edit);\n                return true;\n            },\n        });\n        editor.instance.ui.addButton(this.name, {\n            label: this.label,\n            command: this.command,\n            toolbar: this.toolbar,\n            icon: this.icon,\n        });\n    }\n    ngOnInit() {\n        if (!this.name) {\n            throw new Error('Attribute \"name\" is required on <ckbutton>');\n        }\n        if (!this.command) {\n            throw new Error('Attribute \"command\" is required on <ckbutton>');\n        }\n    }\n}\nCKButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKButtonDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCKButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: CKButtonDirective, selector: \"ckbutton\", inputs: { label: \"label\", command: \"command\", toolbar: \"toolbar\", name: \"name\", icon: \"icon\" }, outputs: { click: \"click\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ckbutton',\n                }]\n        }], propDecorators: { click: [{\n                type: Output\n            }], label: [{\n                type: Input\n            }], command: [{\n                type: Input\n            }], toolbar: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }] } });\n\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckgroup [name]=\"'exampleGroup2'\" [previous]=\"'1'\" [subgroupOf]=\"'exampleGroup1'\">\n *          .\n *          .\n *      </ckgroup>\n *   </ckeditor>\n */\nclass CKGroupDirective {\n    ngAfterContentInit() {\n        // Reconfigure each button's toolbar property within ckgroup to hold its parent's name\n        this.toolbarButtons.forEach((button) => (button.toolbar = this.name));\n    }\n    initialize(editor) {\n        editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf);\n        // Initialize each button within ckgroup\n        this.toolbarButtons.forEach((button) => {\n            button.initialize(editor);\n        });\n    }\n}\nCKGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKGroupDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCKGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: CKGroupDirective, selector: \"ckgroup\", inputs: { name: \"name\", previous: \"previous\", subgroupOf: \"subgroupOf\" }, queries: [{ propertyName: \"toolbarButtons\", predicate: CKButtonDirective }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ckgroup',\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], previous: [{\n                type: Input\n            }], subgroupOf: [{\n                type: Input\n            }], toolbarButtons: [{\n                type: ContentChildren,\n                args: [CKButtonDirective]\n            }] } });\n\n// Imports\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\nclass CKEditorComponent {\n    /**\n     * Constructor\n     */\n    constructor(zone) {\n        this.zone = zone;\n        this.change = new EventEmitter();\n        this.editorChange = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.contentDom = new EventEmitter();\n        this.fileUploadRequest = new EventEmitter();\n        this.fileUploadResponse = new EventEmitter();\n        this.paste = new EventEmitter();\n        this.drop = new EventEmitter();\n        this._value = '';\n        this.destroyed = false;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            this._value = v;\n            this.onChange(v);\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.readonly && this.instance) {\n            this.instance.setReadOnly(changes.readonly.currentValue);\n        }\n    }\n    /**\n     * On component destroy\n     */\n    ngOnDestroy() {\n        this.destroyed = true;\n        this.zone.runOutsideAngular(() => {\n            if (this.instance) {\n                CKEDITOR.removeAllListeners();\n                this.instance.destroy();\n                this.instance = null;\n            }\n        });\n    }\n    /**\n     * On component view init\n     */\n    ngAfterViewInit() {\n        if (this.destroyed) {\n            return;\n        }\n        this.ckeditorInit(this.config || {});\n    }\n    /**\n     * On component view checked\n     */\n    ngAfterViewChecked() {\n        this.ckeditorInit(this.config || {});\n    }\n    /**\n     * Value update process\n     */\n    updateValue(value) {\n        this.zone.run(() => {\n            this.value = value;\n            this.onChange(value);\n            this.onTouched();\n            this.change.emit(value);\n        });\n    }\n    /**\n     * CKEditor init\n     */\n    ckeditorInit(config) {\n        if (typeof CKEDITOR === 'undefined') {\n            console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\n        }\n        else {\n            // Check textarea exists\n            if (this.instance || !this.documentContains(this.host.nativeElement)) {\n                return;\n            }\n            if (this.readonly) {\n                config.readOnly = this.readonly;\n            }\n            // CKEditor replace textarea\n            this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n            // Set initial value\n            this.instance.setData(this.value);\n            // listen for instanceReady event\n            this.instance.on('instanceReady', (evt) => {\n                // if value has changed while instance loading\n                // update instance with current component value\n                if (this.instance.getData() !== this.value) {\n                    this.instance.setData(this.value);\n                }\n                // send the evt to the EventEmitter\n                this.ready.emit(evt);\n            });\n            // CKEditor change event\n            this.instance.on('change', (evt) => {\n                this.onTouched();\n                const value = this.instance.getData();\n                if (this.value !== value) {\n                    // Debounce update\n                    if (this.debounce) {\n                        if (this.debounceTimeout) {\n                            clearTimeout(this.debounceTimeout);\n                        }\n                        this.debounceTimeout = window.setTimeout(() => {\n                            this.updateValue(value);\n                            this.debounceTimeout = null;\n                        }, parseInt(this.debounce));\n                        // Live update\n                    }\n                    else {\n                        this.updateValue(value);\n                    }\n                }\n                // Original ckeditor event dispatch\n                this.editorChange.emit(evt);\n            });\n            // CKEditor blur event\n            this.instance.on('blur', (evt) => {\n                this.blur.emit(evt);\n            });\n            // CKEditor focus event\n            this.instance.on('focus', (evt) => {\n                this.focus.emit(evt);\n            });\n            // CKEditor contentDom event\n            this.instance.on('contentDom', (evt) => {\n                this.contentDom.emit(evt);\n            });\n            // CKEditor fileUploadRequest event\n            this.instance.on('fileUploadRequest', (evt) => {\n                this.fileUploadRequest.emit(evt);\n            });\n            // CKEditor fileUploadResponse event\n            this.instance.on('fileUploadResponse', (evt) => {\n                this.fileUploadResponse.emit(evt);\n            });\n            // CKEditor paste event\n            this.instance.on('paste', (evt) => {\n                this.paste.emit(evt);\n            });\n            // CKEditor drop event\n            this.instance.on('drop', (evt) => {\n                this.drop.emit(evt);\n            });\n            // Add Toolbar Groups to Editor. This will also add Buttons within groups.\n            this.toolbarGroups.forEach((group) => {\n                group.initialize(this);\n            });\n            // Add Toolbar Buttons to Editor.\n            this.toolbarButtons.forEach((button) => {\n                button.initialize(this);\n            });\n        }\n    }\n    /**\n     * Implements ControlValueAccessor\n     */\n    writeValue(value) {\n        this._value = value;\n        if (this.instance)\n            this.instance.setData(value);\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    documentContains(node) {\n        return document.contains ? document.contains(node) : document.body.contains(node);\n    }\n}\nCKEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKEditorComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nCKEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: CKEditorComponent, selector: \"ckeditor\", inputs: { config: \"config\", readonly: \"readonly\", debounce: \"debounce\", value: \"value\" }, outputs: { change: \"change\", editorChange: \"editorChange\", ready: \"ready\", blur: \"blur\", focus: \"focus\", contentDom: \"contentDom\", fileUploadRequest: \"fileUploadRequest\", fileUploadResponse: \"fileUploadResponse\", paste: \"paste\", drop: \"drop\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CKEditorComponent),\n            multi: true,\n        },\n    ], queries: [{ propertyName: \"toolbarButtons\", predicate: CKButtonDirective }, { propertyName: \"toolbarGroups\", predicate: CKGroupDirective }], viewQueries: [{ propertyName: \"host\", first: true, predicate: [\"host\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<textarea #host></textarea>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ckeditor',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => CKEditorComponent),\n                            multi: true,\n                        },\n                    ],\n                    template: `<textarea #host></textarea>`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { config: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], debounce: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], editorChange: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], contentDom: [{\n                type: Output\n            }], fileUploadRequest: [{\n                type: Output\n            }], fileUploadResponse: [{\n                type: Output\n            }], paste: [{\n                type: Output\n            }], drop: [{\n                type: Output\n            }], host: [{\n                type: ViewChild,\n                args: ['host', { static: false }]\n            }], toolbarButtons: [{\n                type: ContentChildren,\n                args: [CKButtonDirective]\n            }], toolbarGroups: [{\n                type: ContentChildren,\n                args: [CKGroupDirective]\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * CKEditorModule\n */\nclass CKEditorModule {\n}\nCKEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCKEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKEditorModule, declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective], imports: [CommonModule], exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective] });\nCKEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKEditorModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CKEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n                    exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CKButtonDirective, CKEditorComponent, CKEditorModule, CKGroupDirective };\n//# sourceMappingURL=ng2-ckeditor.mjs.map\n"]},"metadata":{},"sourceType":"module"}